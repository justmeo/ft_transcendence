# Build stage for web assets
FROM node:20-alpine AS web-builder

WORKDIR /app

# Copy web package files
COPY web/package*.json ./
COPY web/tsconfig.json ./

# Install dependencies
RUN npm install

# Copy web source code
COPY web/src/ ./src/

# Build the application
RUN npm run build

# Final stage - nginx with built assets
FROM nginx:alpine

# Install openssl for certificate generation
RUN apk add --no-cache openssl

# Copy nginx configuration
COPY proxy/nginx-simple.conf /etc/nginx/conf.d/default.conf

# Create nginx directories and set permissions first
RUN mkdir -p /usr/share/nginx/html && \
    chown -R nginx:nginx /usr/share/nginx/html

# Copy built web assets with proper ownership
COPY --from=web-builder --chown=nginx:nginx /app/dist /usr/share/nginx/html

# Generate self-signed certificates
RUN mkdir -p /etc/nginx/certs && \
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/nginx/certs/key.pem \
    -out /etc/nginx/certs/cert.pem \
    -subj "/C=US/ST=State/L=City/O=ft_transcendence/OU=Dev/CN=localhost" && \
    chmod 600 /etc/nginx/certs/key.pem && \
    chmod 644 /etc/nginx/certs/cert.pem

# Ensure proper permissions for web directory (final check)
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html && \
    find /usr/share/nginx/html -type f -exec chmod 644 {} \;

EXPOSE 80 443

CMD ["nginx", "-g", "daemon off;"]